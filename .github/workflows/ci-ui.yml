name: CI UI
on:
  workflow_call:
    secrets:
      NPM_AUTH_TOKEN:
        required: true

jobs:
  dependencies:
    name: "Install Dependencies"
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: modules-${{ hashFiles('./yarn.lock') }}
      - name: Install Dependencies
        run: yarn install --frozen-lockfile

  check_branch:
    name: 'Check origin branch'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      # Only run CI from unprotected branches (avoid CI for backporting)
      - name: Check origin branch
        id: should_run
        run: |
          should_run=${{ (github.head_ref != 'main') && (github.head_ref != 'develop') && !startsWith(github.head_ref, 'release') }}
          echo "::set-output name=should_run::$should_run"
      - run: echo Should run PR based on origin branch? - ${{ steps.should_run.outputs.should_run }}
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}

  tests:
    name: 'Tests and Coverage'
    needs: [check_branch, dependencies]
    if: ${{ needs.check_branch.outputs.should_run == 'true' }}
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'yarn'
      - uses: actions/cache@v2
        with:
          path: './node_modules'
          key: modules-${{ hashFiles('./yarn.lock') }}
      - name: Run Tests
        run: yarn test:coverage
      - name: Upload Coverage Report (Codecov)
        run: bash <(curl -s https://codecov.io/bash)

  lint:
    name: 'Run ESLint'
    needs: [check_branch, dependencies]
    if: ${{ needs.check_branch.outputs.should_run == 'true' }}
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'yarn'
      - uses: actions/cache@v2
        with:
          path: './node_modules'
          key: modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn lint
