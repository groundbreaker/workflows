name: CI Monorepo
on:
  workflow_call:
    secrets:
      NPM_AUTH_TOKEN:
        required: true
      CODECOV_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      PRIVATE_KEY:
        required: true
      KNOWN_HOSTS:
        required: true

jobs:
  dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: modules-${{ hashFiles('./yarn.lock') }}
      - run: lerna bootstrap

  tests:
    name: Tests and Coverage
    needs: dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: modules-${{ hashFiles('./yarn.lock') }}
      - run: lerna run build:common
      - run: lerna run test:ci
      - run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Run ESLint
    needs: dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: modules-${{ hashFiles('./yarn.lock') }}
      - name: Build common packages
        run: lerna run build:common
      - run: lerna run lint

  build:
    name: Build Packages
    needs: dependencies
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      ENVIRONMENT: development
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: modules-${{ hashFiles('./yarn.lock') }}
      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build common packages
        run: lerna run build:common
      - name: Build packages
        run: lerna run build --exclude-dependents

  validate_terraform:
    name: Validate Terraform Code
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ENVIRONMENT: development
    defaults:
      run:
        working-directory: ./terraform
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.1
      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: fail
      - run: terraform init
      - run: terraform workspace select ${{ env.ENVIRONMENT }} || terraform workspace new ${{ env.ENVIRONMENT }}
      - run: terraform validate
