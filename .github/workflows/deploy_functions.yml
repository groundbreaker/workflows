name: Deploy Functions
on:
  workflow_call:
    inputs:
      environment: # development | release | production
        required: true
        type: string

    secrets:
      NPM_AUTH_TOKEN:
        required: true
      AWS_OPS_BUCKET:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ROLE:
        required: true

jobs:
  code-changed:
    name: 'Check Code Changes'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 5

      - uses: marceloprado/has-changed-path@v1
        id: code-changed
        with:
          paths: api consumers shared/common shared/config

      - run: echo Has any code been updated? - ${{ steps.code-changed.outputs.changed }}

    outputs:
      code-changed: ${{ steps.code-changed.outputs.changed }}

  deploy:
    name: 'Deploy Changed Functions'
    needs: [code-changed]
    if: ${{ needs.code-changed.outputs.code-changed == 'true'}}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      AWS_OPS_BUCKET: ${{ secrets.AWS_OPS_BUCKET }}

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 5

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: modules-${{ hashFiles('./yarn.lock') }}

      - name: Generate and publish release
        if: ${{ inputs.environment }} == 'production'
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: true

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-duration-seconds: 1200
          role-session-name: ${{ inputs.environment }}

      - name: Set Short Env
        run: |
          case development in
            development) echo "short_env=dev" $GITHUB_ENV;;
            release) echo "short_env=release" >> $GITHUB_ENV;;
            production) echo "short_env=prod" $GITHUB_ENV;;
          esac

      - run: lerna bootstrap
      
      - name: Build common packages
        run: lerna run build:common

      - name: Build modified packages
        run: lerna run build --since origin/${{ github.ref_name }}~1 --exclude-dependents

      - name: Deploy modified packages
        run: lerna run deploy:${{ env.short_env }} --since origin/${{ github.ref_name }}~1 --exclude-dependents
